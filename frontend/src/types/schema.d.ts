/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/rest/auth/callback": {
        get: operations["callback"];
    };
    "/rest/auth/loggedIn": {
        get: operations["loggedIn"];
    };
    "/rest/auth/login": {
        get: operations["login"];
    };
    "/rest/auth/logout": {
        get: operations["logout"];
    };
    "/rest/buurt/list": {
        get: operations["getAllBuurts"];
    };
    "/rest/config": {
        get: operations["getConfig"];
    };
    "/rest/houseblock/add": {
        post: operations["createHouseblock"];
    };
    "/rest/houseblock/{id}": {
        delete: operations["deleteHouseblock"];
    };
    "/rest/houseblock/{uuid}": {
        get: operations["getCurrentHouseblockSnapshot"];
    };
    "/rest/houseblock/{id}/customproperties": {
        get: operations["getProjectCustomProperties"];
        put: operations["updateProjectCustomProperty"];
    };
    "/rest/houseblock/update": {
        put: operations["updateHouseblock"];
    };
    "/rest/milestone/{id}": {
        get: operations["getMilestone"];
    };
    "/rest/municipality/list": {
        get: operations["getAllMunicipalities"];
    };
    "/rest/municipalityrole/list": {
        get: operations["getAllMunicipalityRoles"];
    };
    "/rest/organizations/list": {
        get: operations["getAllOrganization"];
    };
    "/rest/priority/list": {
        get: operations["getAllPriorities"];
    };
    "/rest/projects": {
        post: operations["createProject"];
    };
    "/rest/projects/{id}": {
        get: operations["getCurrentProjectSnapshot"];
        delete: operations["deleteProject"];
    };
    "/rest/projects/table": {
        get: operations["getAllProjects"];
    };
    "/rest/projects/table/size": {
        get: operations["getAllProjectsListSize"];
    };
    "/rest/projects/{id}/timeline": {
        get: operations["getCurrentProjectTimeline"];
    };
    "/rest/projects/{id}/customproperties": {
        get: operations["getProjectCustomProperties_1"];
        put: operations["updateProjectCustomProperty_1"];
    };
    "/rest/projects/{id}/houseblocks": {
        get: operations["getProjectHouseblocks"];
    };
    "/rest/projects/{id}/plots": {
        get: operations["getProjectPlots"];
        post: operations["setProjectPlots"];
    };
    "/rest/projects/{id}/update": {
        post: operations["updateProject"];
    };
    "/rest/projects/update": {
        post: operations["updateProjectSnapshot"];
    };
    "/rest/properties": {
        get: operations["getAllProperties"];
        post: operations["createCustomProperty"];
    };
    "/rest/properties/{id}": {
        get: operations["getProperty"];
        put: operations["updateProperty"];
        delete: operations["disableCustomProperty"];
    };
    "/rest/users/userinfo": {
        get: operations["login_1"];
    };
    "/rest/wijk/list": {
        get: operations["getAllWijks"];
    };
}

export type webhooks = Record<string, never>;

export interface components {
    schemas: {
        SelectModel: {
            /** Format: uuid */
            id: string;
            name: string;
        };
        ConfigModel: {
            defaultMapBounds?: components["schemas"]["MapBounds"];
            municipalityName?: string;
        };
        LocationModel: {
            /** Format: double */
            lat: number;
            /** Format: double */
            lng: number;
        };
        MapBounds: {
            corner1?: components["schemas"]["LocationModel"];
            corner2?: components["schemas"]["LocationModel"];
        };
        GroundPosition: {
            /** Format: int32 */
            noPermissionOwner?: number;
            /** Format: int32 */
            intentionPermissionOwner?: number;
            /** Format: int32 */
            formalPermissionOwner?: number;
        };
        HouseType: {
            /** Format: int32 */
            meergezinswoning?: number;
            /** Format: int32 */
            eengezinswoning?: number;
        };
        HouseblockSnapshotModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            projectId?: string;
            /** Format: uuid */
            houseblockId?: string;
            houseblockName?: string;
            size?: components["schemas"]["SingleValueOrRangeModelBigDecimal"];
            programming?: boolean;
            mutation?: components["schemas"]["Mutation"];
            ownershipValue?: components["schemas"]["OwnershipValue"][];
            groundPosition?: components["schemas"]["GroundPosition"];
            physicalAppearance?: components["schemas"]["PhysicalAppearance"];
            houseType?: components["schemas"]["HouseType"];
            purpose?: components["schemas"]["Purpose"];
            customProperties?: components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
        };
        Mutation: {
            mutationKind?: ("BOUW" | "SLOOP" | "TRANSFORMATIE" | "SPLITSING")[];
            /** Format: int32 */
            grossPlanCapacity?: number;
            /** Format: int32 */
            netPlanCapacity?: number;
            /** Format: int32 */
            demolition?: number;
        };
        OwnershipValue: {
            /** Format: uuid */
            id?: string;
            /** @enum {string} */
            type?: "KOOPWONING" | "HUURWONING_PARTICULIERE_VERHUURDER" | "HUURWONING_WONINGCORPORATIE";
            /** Format: int32 */
            amount?: number;
            value?: components["schemas"]["SingleValueOrRangeModelInteger"];
            rentalValue?: components["schemas"]["SingleValueOrRangeModelInteger"];
        };
        PhysicalAppearance: {
            /** Format: int32 */
            tussenwoning?: number;
            /** Format: int32 */
            tweeondereenkap?: number;
            /** Format: int32 */
            portiekflat?: number;
            /** Format: int32 */
            hoekwoning?: number;
            /** Format: int32 */
            vrijstaand?: number;
            /** Format: int32 */
            gallerijflat?: number;
        };
        ProjectHouseblockCustomPropertyModel: {
            /** Format: uuid */
            customPropertyId?: string;
            /** @enum {string} */
            propertyType?: "BOOLEAN" | "CATEGORY" | "ORDINAL" | "NUMERIC" | "TEXT";
            textValue?: string;
            booleanValue?: boolean;
            numericValue?: components["schemas"]["SingleValueOrRangeModelBigDecimal"];
            categories?: string[];
            ordinals?: components["schemas"]["SingleValueOrRangeModelUUID"];
        };
        Purpose: {
            /** Format: int32 */
            regular?: number;
            /** Format: int32 */
            youth?: number;
            /** Format: int32 */
            student?: number;
            /** Format: int32 */
            elderly?: number;
            /** Format: int32 */
            largeFamilies?: number;
            /** Format: int32 */
            ghz?: number;
        };
        SingleValueOrRangeModelBigDecimal: {
            value?: number;
            min?: number;
            max?: number;
        };
        SingleValueOrRangeModelInteger: {
            /** Format: int32 */
            value?: number;
            /** Format: int32 */
            min?: number;
            /** Format: int32 */
            max?: number;
        };
        SingleValueOrRangeModelUUID: {
            /** Format: uuid */
            value?: string;
            /** Format: uuid */
            min?: string;
            /** Format: uuid */
            max?: string;
        };
        MilestoneModel: {
            /** Format: uuid */
            id: string;
            /** Format: uuid */
            stateId: string;
            /** @enum {string} */
            status: "VOORSPELD" | "GEPLAND" | "GEREALISEERD" | "AFGEBROKEN";
            /** Format: date */
            date?: string;
            description?: string;
        };
        OrganizationModel: {
            /** Format: uuid */
            uuid: string;
            name: string;
            users?: components["schemas"]["OrganizationUserModel"][];
        };
        OrganizationUserModel: {
            /** Format: uuid */
            uuid?: string;
            firstName?: string;
            lastName?: string;
            initials?: string;
        };
        ProjectMinimalSnapshotModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            projectName: string;
            projectColor: string;
            /** @enum {string} */
            confidentialityLevel: "PRIVE" | "INTERN_UITVOERING" | "INTERN_RAPPORTAGE" | "EXTERN_RAPPORTAGE" | "OPENBAAR";
            /** @enum {string} */
            projectPhase: "_1_INITIATIEFFASE" | "_2_PROJECTFASE" | "_3_VERGUNNINGSFASE" | "_4_REALISATIEFASE" | "_5_OPLEVERINGSFASE";
            /** Format: uuid */
            projectId: string;
        };
        ProjectCreateSnapshotModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            projectName: string;
            projectColor: string;
            /** @enum {string} */
            confidentialityLevel: "PRIVE" | "INTERN_UITVOERING" | "INTERN_RAPPORTAGE" | "EXTERN_RAPPORTAGE" | "OPENBAAR";
            /** @enum {string} */
            projectPhase: "_1_INITIATIEFFASE" | "_2_PROJECTFASE" | "_3_VERGUNNINGSFASE" | "_4_REALISATIEFASE" | "_5_OPLEVERINGSFASE";
        };
        PriorityModel: {
            value?: components["schemas"]["SelectModel"];
            min?: components["schemas"]["SelectModel"];
            max?: components["schemas"]["SelectModel"];
        };
        ProjectListModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            projectName: string;
            projectColor: string;
            /** @enum {string} */
            confidentialityLevel: "PRIVE" | "INTERN_UITVOERING" | "INTERN_RAPPORTAGE" | "EXTERN_RAPPORTAGE" | "OPENBAAR";
            /** @enum {string} */
            projectPhase: "_1_INITIATIEFFASE" | "_2_PROJECTFASE" | "_3_VERGUNNINGSFASE" | "_4_REALISATIEFASE" | "_5_OPLEVERINGSFASE";
            /** Format: uuid */
            projectId: string;
            /** Format: uuid */
            projectStateId?: string;
            planningPlanStatus?: (
                | "_1A_ONHERROEPELIJK"
                | "_1B_ONHERROEPELIJK_MET_UITWERKING_NODIG"
                | "_1C_ONHERROEPELIJK_MET_BW_NODIG"
                | "_2A_VASTGESTELD"
                | "_2B_VASTGESTELD_MET_UITWERKING_NODIG"
                | "_2C_VASTGESTELD_MET_BW_NODIG"
                | "_3_IN_VOORBEREIDING"
                | "_4A_OPGENOMEN_IN_VISIE"
                | "_4B_NIET_OPGENOMEN_IN_VISIE"
            )[];
            planType?: ("PAND_TRANSFORMATIE" | "TRANSFORMATIEGEBIED" | "HERSTRUCTURERING" | "VERDICHTING" | "UITBREIDING_UITLEG" | "UITBREIDING_OVERIG")[];
            priority?: components["schemas"]["PriorityModel"];
            municipalityRole?: components["schemas"]["SelectModel"][];
            projectOwners?: components["schemas"]["OrganizationModel"][];
            projectLeaders?: components["schemas"]["OrganizationModel"][];
            /** Format: int64 */
            totalValue?: number;
            municipality?: components["schemas"]["SelectModel"][];
            wijk?: components["schemas"]["SelectModel"][];
            buurt?: components["schemas"]["SelectModel"][];
            location?: components["schemas"]["LocationModel"];
        };
        ProjectSnapshotModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            projectName: string;
            projectColor: string;
            /** @enum {string} */
            confidentialityLevel: "PRIVE" | "INTERN_UITVOERING" | "INTERN_RAPPORTAGE" | "EXTERN_RAPPORTAGE" | "OPENBAAR";
            /** @enum {string} */
            projectPhase: "_1_INITIATIEFFASE" | "_2_PROJECTFASE" | "_3_VERGUNNINGSFASE" | "_4_REALISATIEFASE" | "_5_OPLEVERINGSFASE";
            /** Format: uuid */
            projectId: string;
            /** Format: uuid */
            projectStateId?: string;
            planningPlanStatus?: (
                | "_1A_ONHERROEPELIJK"
                | "_1B_ONHERROEPELIJK_MET_UITWERKING_NODIG"
                | "_1C_ONHERROEPELIJK_MET_BW_NODIG"
                | "_2A_VASTGESTELD"
                | "_2B_VASTGESTELD_MET_UITWERKING_NODIG"
                | "_2C_VASTGESTELD_MET_BW_NODIG"
                | "_3_IN_VOORBEREIDING"
                | "_4A_OPGENOMEN_IN_VISIE"
                | "_4B_NIET_OPGENOMEN_IN_VISIE"
            )[];
            planType?: ("PAND_TRANSFORMATIE" | "TRANSFORMATIEGEBIED" | "HERSTRUCTURERING" | "VERDICHTING" | "UITBREIDING_UITLEG" | "UITBREIDING_OVERIG")[];
            priority?: components["schemas"]["PriorityModel"];
            municipalityRole?: components["schemas"]["SelectModel"][];
            projectOwners?: components["schemas"]["OrganizationModel"][];
            projectLeaders?: components["schemas"]["OrganizationModel"][];
            /** Format: int64 */
            totalValue?: number;
            municipality?: components["schemas"]["SelectModel"][];
            wijk?: components["schemas"]["SelectModel"][];
            buurt?: components["schemas"]["SelectModel"][];
            location?: components["schemas"]["LocationModel"];
            customProperties?: components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
        };
        DatedDataModelListPlanStatus: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            id?: string;
            data?: (
                | "_1A_ONHERROEPELIJK"
                | "_1B_ONHERROEPELIJK_MET_UITWERKING_NODIG"
                | "_1C_ONHERROEPELIJK_MET_BW_NODIG"
                | "_2A_VASTGESTELD"
                | "_2B_VASTGESTELD_MET_UITWERKING_NODIG"
                | "_2C_VASTGESTELD_MET_BW_NODIG"
                | "_3_IN_VOORBEREIDING"
                | "_4A_OPGENOMEN_IN_VISIE"
                | "_4B_NIET_OPGENOMEN_IN_VISIE"
            )[];
        };
        DatedDataModelListPlanType: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            id?: string;
            data?: ("PAND_TRANSFORMATIE" | "TRANSFORMATIEGEBIED" | "HERSTRUCTURERING" | "VERDICHTING" | "UITBREIDING_UITLEG" | "UITBREIDING_OVERIG")[];
        };
        DatedDataModelProjectPhase: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            id?: string;
            /** @enum {string} */
            data?: "_1_INITIATIEFFASE" | "_2_PROJECTFASE" | "_3_VERGUNNINGSFASE" | "_4_REALISATIEFASE" | "_5_OPLEVERINGSFASE";
        };
        DatedDataModelString: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            id?: string;
            data?: string;
        };
        DatedPriorityModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            priorityModel?: components["schemas"]["PriorityModel"];
        };
        ProjectTimelineModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            projectId?: string;
            projectName?: components["schemas"]["DatedDataModelString"][];
            projectColor?: string;
            /** @enum {string} */
            confidentialityLevel?: "PRIVE" | "INTERN_UITVOERING" | "INTERN_RAPPORTAGE" | "EXTERN_RAPPORTAGE" | "OPENBAAR";
            location?: components["schemas"]["LocationModel"];
            planType?: components["schemas"]["DatedDataModelListPlanType"][];
            priority?: components["schemas"]["DatedPriorityModel"][];
            projectPhase?: components["schemas"]["DatedDataModelProjectPhase"][];
            municipalityRole?: components["schemas"]["DatedDataModelString"][];
            planningPlanStatus?: components["schemas"]["DatedDataModelListPlanStatus"][];
            projectOwners?: components["schemas"]["OrganizationModel"][];
            projectLeaders?: components["schemas"]["OrganizationModel"][];
            /** Format: int64 */
            totalValue?: number;
            municipality?: string[];
            wijk?: string[];
            buurt?: string[];
        };
        ObjectNode: Record<string, never>;
        PlotModel: {
            brkGemeenteCode?: string;
            brkSectie?: string;
            /** Format: int64 */
            brkPerceelNummer?: number;
            subselectionGeometry?: components["schemas"]["ObjectNode"];
            plotFeature?: components["schemas"]["ObjectNode"];
        };
        ProjectUpdateModel: {
            /** @enum {string} */
            property?:
                | "confidentialityLevel"
                | "location"
                | "municipalityRole"
                | "name"
                | "planningPlanStatus"
                | "planType"
                | "priority"
                | "projectColor"
                | "projectLeaders"
                | "projectOwners"
                | "projectPhase"
                | "startDate"
                | "endDate";
            value?: string;
            values?: string[];
            /** Format: uuid */
            add?: string;
            /** Format: uuid */
            remove?: string;
            /** Format: uuid */
            min?: string;
            /** Format: uuid */
            max?: string;
        };
        OrdinalSelectDisabledModel: {
            /** Format: uuid */
            id?: string;
            name: string;
            disabled: boolean;
            /** Format: int32 */
            level: number;
        };
        PropertyModel: {
            /** Format: uuid */
            id?: string;
            name: string;
            /** @enum {string} */
            type: "FIXED" | "CUSTOM";
            /** @enum {string} */
            objectType: "PROJECT" | "WONINGBLOK";
            /** @enum {string} */
            propertyType: "BOOLEAN" | "CATEGORY" | "ORDINAL" | "NUMERIC" | "TEXT";
            disabled: boolean;
            categories?: components["schemas"]["SelectDisabledModel"][];
            ordinals?: components["schemas"]["OrdinalSelectDisabledModel"][];
        };
        SelectDisabledModel: {
            /** Format: uuid */
            id?: string;
            name: string;
            disabled: boolean;
        };
        UserModel: {
            /** Format: uuid */
            uuid: string;
            firstName: string;
            lastName: string;
            initials: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
    callback: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    loggedIn: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    login: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    logout: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    getAllBuurts: {
        parameters: {
            query?: {
                wijkId?: string[];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["SelectModel"][];
                };
            };
        };
    };
    getConfig: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ConfigModel"];
                };
            };
        };
    };
    createHouseblock: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["HouseblockSnapshotModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["HouseblockSnapshotModel"];
                };
            };
        };
    };
    deleteHouseblock: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    getCurrentHouseblockSnapshot: {
        parameters: {
            path: {
                uuid: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["HouseblockSnapshotModel"];
                };
            };
        };
    };
    getProjectCustomProperties: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
                };
            };
        };
    };
    updateProjectCustomProperty: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
                };
            };
        };
    };
    updateHouseblock: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["HouseblockSnapshotModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["HouseblockSnapshotModel"];
                };
            };
        };
    };
    getMilestone: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["MilestoneModel"];
                };
            };
        };
    };
    getAllMunicipalities: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["SelectModel"][];
                };
            };
        };
    };
    getAllMunicipalityRoles: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["SelectModel"][];
                };
            };
        };
    };
    getAllOrganization: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["OrganizationModel"][];
                };
            };
        };
    };
    getAllPriorities: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["SelectModel"][];
                };
            };
        };
    };
    createProject: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ProjectCreateSnapshotModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectMinimalSnapshotModel"];
                };
            };
        };
    };
    getCurrentProjectSnapshot: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectSnapshotModel"];
                };
            };
        };
    };
    deleteProject: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    getAllProjects: {
        parameters: {
            query?: {
                pageNumber?: number;
                pageSize?: number;
                sortColumn?: string;
                sortDirection?: "ASC" | "DESC";
                filterColumn?: string;
                filterValue?: string[];
                filterCondition?: "CONTAINS" | "ANY_OF";
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectListModel"][];
                };
            };
        };
    };
    getAllProjectsListSize: {
        parameters: {
            query?: {
                pageNumber?: number;
                pageSize?: number;
                sortColumn?: string;
                sortDirection?: "ASC" | "DESC";
                filterColumn?: string;
                filterValue?: string[];
                filterCondition?: "CONTAINS" | "ANY_OF";
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": {
                        [key: string]: number;
                    };
                };
            };
        };
    };
    getCurrentProjectTimeline: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectTimelineModel"];
                };
            };
        };
    };
    getProjectCustomProperties_1: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
                };
            };
        };
    };
    updateProjectCustomProperty_1: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
                };
            };
        };
    };
    getProjectHouseblocks: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["HouseblockSnapshotModel"][];
                };
            };
        };
    };
    getProjectPlots: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PlotModel"][];
                };
            };
        };
    };
    setProjectPlots: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PlotModel"][];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    updateProject: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ProjectUpdateModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectSnapshotModel"];
                };
            };
        };
    };
    updateProjectSnapshot: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ProjectSnapshotModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectSnapshotModel"];
                };
            };
        };
    };
    getAllProperties: {
        parameters: {
            query?: {
                objectType?: "PROJECT" | "WONINGBLOK";
                disabled?: boolean;
                type?: "FIXED" | "CUSTOM";
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"][];
                };
            };
        };
    };
    createCustomProperty: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PropertyModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"];
                };
            };
        };
    };
    getProperty: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"];
                };
            };
        };
    };
    updateProperty: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PropertyModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"];
                };
            };
        };
    };
    disableCustomProperty: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"];
                };
            };
        };
    };
    login_1: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserModel"];
                };
            };
        };
    };
    getAllWijks: {
        parameters: {
            query?: {
                gemeenteId?: string[];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["SelectModel"][];
                };
            };
        };
    };
}
