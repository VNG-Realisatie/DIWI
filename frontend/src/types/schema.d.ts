/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/rest/auth/callback": {
        get: operations["callback"];
    };
    "/rest/auth/loggedIn": {
        get: operations["loggedIn"];
    };
    "/rest/auth/login": {
        get: operations["login"];
    };
    "/rest/auth/logout": {
        get: operations["logout"];
    };
    "/rest/config": {
        get: operations["getConfig"];
    };
    "/rest/houseblock/add": {
        post: operations["createHouseblock"];
    };
    "/rest/houseblock/{id}": {
        delete: operations["deleteHouseblock"];
    };
    "/rest/houseblock/{uuid}": {
        get: operations["getCurrentHouseblockSnapshot"];
    };
    "/rest/houseblock/{id}/customproperties": {
        get: operations["getProjectCustomProperties"];
        put: operations["updateProjectCustomProperty"];
    };
    "/rest/houseblock/update": {
        put: operations["updateHouseblock"];
    };
    "/rest/milestone/{id}": {
        get: operations["getMilestone"];
    };
    "/rest/projects": {
        post: operations["createProject"];
    };
    "/rest/projects/{id}": {
        get: operations["getCurrentProjectSnapshot"];
        delete: operations["deleteProject"];
    };
    "/rest/projects/table": {
        get: operations["getAllProjects"];
    };
    "/rest/projects/table/size": {
        get: operations["getAllProjectsListSize"];
    };
    "/rest/projects/{id}/timeline": {
        get: operations["getCurrentProjectTimeline"];
    };
    "/rest/projects/{id}/customproperties": {
        get: operations["getProjectCustomProperties_1"];
        put: operations["updateProjectCustomProperty_1"];
    };
    "/rest/projects/{id}/houseblocks": {
        get: operations["getProjectHouseblocks"];
    };
    "/rest/projects/{id}/plots": {
        get: operations["getProjectPlots"];
        post: operations["setProjectPlots"];
    };
    "/rest/projects/import": {
        post: operations["importFile"];
    };
    "/rest/projects/update": {
        post: operations["updateProjectSnapshot"];
    };
    "/rest/properties": {
        get: operations["getAllProperties"];
        post: operations["createCustomProperty"];
    };
    "/rest/properties/{id}": {
        get: operations["getProperty"];
        put: operations["updateProperty"];
        delete: operations["disableCustomProperty"];
    };
    "/rest/groups": {
        get: operations["getAllUserGroups"];
        post: operations["createUserGroup"];
    };
    "/rest/groups/{id}": {
        put: operations["updateUserGroup"];
        delete: operations["deleteUserGroup"];
    };
    "/rest/users": {
        get: operations["getAllUsers"];
        post: operations["createUser"];
    };
    "/rest/users/{userId}": {
        get: operations["getUser"];
        delete: operations["deleteUser"];
    };
    "/rest/users/{id}": {
        put: operations["updateUser"];
    };
    "/rest/users/userinfo": {
        get: operations["userInfo"];
    };
}

export type webhooks = Record<string, never>;

export interface components {
    schemas: {
        ConfigModel: {
            defaultMapBounds?: components["schemas"]["MapBounds"];
            municipalityName?: string;
        };
        LocationModel: {
            /** Format: double */
            lat: number;
            /** Format: double */
            lng: number;
        };
        MapBounds: {
            corner1?: components["schemas"]["LocationModel"];
            corner2?: components["schemas"]["LocationModel"];
        };
        AmountModel: {
            /** Format: uuid */
            id: string;
            /** Format: int32 */
            amount: number;
        };
        GroundPosition: {
            /** Format: int32 */
            noPermissionOwner?: number;
            /** Format: int32 */
            intentionPermissionOwner?: number;
            /** Format: int32 */
            formalPermissionOwner?: number;
        };
        HouseType: {
            /** Format: int32 */
            meergezinswoning?: number;
            /** Format: int32 */
            eengezinswoning?: number;
        };
        HouseblockSnapshotModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            projectId?: string;
            /** Format: uuid */
            houseblockId?: string;
            houseblockName?: string;
            size?: components["schemas"]["SingleValueOrRangeModelBigDecimal"];
            programming?: boolean;
            mutation?: components["schemas"]["Mutation"];
            ownershipValue?: components["schemas"]["OwnershipValue"][];
            groundPosition?: components["schemas"]["GroundPosition"];
            physicalAppearance?: components["schemas"]["AmountModel"][];
            houseType?: components["schemas"]["HouseType"];
            targetGroup?: components["schemas"]["AmountModel"][];
            customProperties?: components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
        };
        Mutation: {
            /** @enum {string} */
            kind?: "CONSTRUCTION" | "DEMOLITION";
            /** Format: int32 */
            amount?: number;
        };
        OwnershipValue: {
            /** Format: uuid */
            id?: string;
            /** @enum {string} */
            type?: "KOOPWONING" | "HUURWONING_PARTICULIERE_VERHUURDER" | "HUURWONING_WONINGCORPORATIE";
            /** Format: int32 */
            amount?: number;
            value?: components["schemas"]["SingleValueOrRangeModelInteger"];
            rentalValue?: components["schemas"]["SingleValueOrRangeModelInteger"];
        };
        ProjectHouseblockCustomPropertyModel: {
            /** Format: uuid */
            customPropertyId?: string;
            /** @enum {string} */
            propertyType?: "BOOLEAN" | "CATEGORY" | "ORDINAL" | "NUMERIC" | "TEXT";
            textValue?: string;
            booleanValue?: boolean;
            numericValue?: components["schemas"]["SingleValueOrRangeModelBigDecimal"];
            categories?: string[];
            ordinals?: components["schemas"]["SingleValueOrRangeModelUUID"];
        };
        SingleValueOrRangeModelBigDecimal: {
            value?: number;
            min?: number;
            max?: number;
        };
        SingleValueOrRangeModelInteger: {
            /** Format: int32 */
            value?: number;
            /** Format: int32 */
            min?: number;
            /** Format: int32 */
            max?: number;
        };
        SingleValueOrRangeModelUUID: {
            /** Format: uuid */
            value?: string;
            /** Format: uuid */
            min?: string;
            /** Format: uuid */
            max?: string;
        };
        MilestoneModel: {
            /** Format: uuid */
            id: string;
            /** Format: uuid */
            stateId: string;
            /** @enum {string} */
            status: "VOORSPELD" | "GEPLAND" | "GEREALISEERD" | "AFGEBROKEN";
            /** Format: date */
            date?: string;
            description?: string;
        };
        ProjectMinimalSnapshotModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            projectName: string;
            projectColor: string;
            /** @enum {string} */
            confidentialityLevel:
                | "PRIVATE"
                | "INTERNAL_CIVIL"
                | "INTERNAL_MANAGEMENT"
                | "INTERNAL_COUNCIL"
                | "EXTERNAL_REGIONAL"
                | "EXTERNAL_GOVERNMENTAL"
                | "PUBLIC";
            /** @enum {string} */
            projectPhase: "_1_CONCEPT" | "_2_INITIATIVE" | "_3_DEFINITION" | "_4_DESIGN" | "_5_PREPARATION" | "_6_REALIZATION" | "_7_AFTERCARE";
            projectOwners: components["schemas"]["UserGroupModel"][];
            /** Format: uuid */
            projectId: string;
        };
        UserGroupModel: {
            /** Format: uuid */
            uuid: string;
            name: string;
            users?: components["schemas"]["UserGroupUserModel"][];
        };
        UserGroupUserModel: {
            /** Format: uuid */
            uuid?: string;
            firstName?: string;
            lastName?: string;
            initials?: string;
        };
        ProjectCreateSnapshotModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            projectName: string;
            projectColor: string;
            /** @enum {string} */
            confidentialityLevel:
                | "PRIVATE"
                | "INTERNAL_CIVIL"
                | "INTERNAL_MANAGEMENT"
                | "INTERNAL_COUNCIL"
                | "EXTERNAL_REGIONAL"
                | "EXTERNAL_GOVERNMENTAL"
                | "PUBLIC";
            /** @enum {string} */
            projectPhase: "_1_CONCEPT" | "_2_INITIATIVE" | "_3_DEFINITION" | "_4_DESIGN" | "_5_PREPARATION" | "_6_REALIZATION" | "_7_AFTERCARE";
            projectOwners: components["schemas"]["UserGroupModel"][];
        };
        PriorityModel: {
            value?: components["schemas"]["SelectModel"];
            min?: components["schemas"]["SelectModel"];
            max?: components["schemas"]["SelectModel"];
        };
        ProjectListModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            projectName: string;
            projectColor: string;
            /** @enum {string} */
            confidentialityLevel:
                | "PRIVATE"
                | "INTERNAL_CIVIL"
                | "INTERNAL_MANAGEMENT"
                | "INTERNAL_COUNCIL"
                | "EXTERNAL_REGIONAL"
                | "EXTERNAL_GOVERNMENTAL"
                | "PUBLIC";
            /** @enum {string} */
            projectPhase: "_1_CONCEPT" | "_2_INITIATIVE" | "_3_DEFINITION" | "_4_DESIGN" | "_5_PREPARATION" | "_6_REALIZATION" | "_7_AFTERCARE";
            projectOwners: components["schemas"]["UserGroupModel"][];
            /** Format: uuid */
            projectId: string;
            /** Format: uuid */
            projectStateId?: string;
            planningPlanStatus?: (
                | "_4A_OPGENOMEN_IN_VISIE"
                | "_4B_NIET_OPGENOMEN_IN_VISIE"
                | "_3_IN_VOORBEREIDING"
                | "_2A_VASTGESTELD"
                | "_2B_VASTGESTELD_MET_UITWERKING_NODIG"
                | "_2C_VASTGESTELD_MET_BW_NODIG"
                | "_1A_ONHERROEPELIJK"
                | "_1B_ONHERROEPELIJK_MET_UITWERKING_NODIG"
                | "_1C_ONHERROEPELIJK_MET_BW_NODIG"
            )[];
            planType?: ("PAND_TRANSFORMATIE" | "TRANSFORMATIEGEBIED" | "HERSTRUCTURERING" | "VERDICHTING" | "UITBREIDING_UITLEG" | "UITBREIDING_OVERIG")[];
            priority?: components["schemas"]["PriorityModel"];
            municipalityRole?: components["schemas"]["SelectModel"][];
            /** Format: int64 */
            totalValue?: number;
            municipality?: components["schemas"]["SelectModel"][];
            district?: components["schemas"]["SelectModel"][];
            neighbourhood?: components["schemas"]["SelectModel"][];
            location?: components["schemas"]["LocationModel"];
            geometry?: string;
        };
        SelectModel: {
            /** Format: uuid */
            id: string;
            name: string;
        };
        ProjectSnapshotModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            projectName: string;
            projectColor: string;
            /** @enum {string} */
            confidentialityLevel:
                | "PRIVATE"
                | "INTERNAL_CIVIL"
                | "INTERNAL_MANAGEMENT"
                | "INTERNAL_COUNCIL"
                | "EXTERNAL_REGIONAL"
                | "EXTERNAL_GOVERNMENTAL"
                | "PUBLIC";
            /** @enum {string} */
            projectPhase: "_1_CONCEPT" | "_2_INITIATIVE" | "_3_DEFINITION" | "_4_DESIGN" | "_5_PREPARATION" | "_6_REALIZATION" | "_7_AFTERCARE";
            projectOwners: components["schemas"]["UserGroupModel"][];
            /** Format: uuid */
            projectId: string;
            /** Format: uuid */
            projectStateId?: string;
            planningPlanStatus?: (
                | "_4A_OPGENOMEN_IN_VISIE"
                | "_4B_NIET_OPGENOMEN_IN_VISIE"
                | "_3_IN_VOORBEREIDING"
                | "_2A_VASTGESTELD"
                | "_2B_VASTGESTELD_MET_UITWERKING_NODIG"
                | "_2C_VASTGESTELD_MET_BW_NODIG"
                | "_1A_ONHERROEPELIJK"
                | "_1B_ONHERROEPELIJK_MET_UITWERKING_NODIG"
                | "_1C_ONHERROEPELIJK_MET_BW_NODIG"
            )[];
            planType?: ("PAND_TRANSFORMATIE" | "TRANSFORMATIEGEBIED" | "HERSTRUCTURERING" | "VERDICHTING" | "UITBREIDING_UITLEG" | "UITBREIDING_OVERIG")[];
            priority?: components["schemas"]["PriorityModel"];
            municipalityRole?: components["schemas"]["SelectModel"][];
            /** Format: int64 */
            totalValue?: number;
            municipality?: components["schemas"]["SelectModel"][];
            district?: components["schemas"]["SelectModel"][];
            neighbourhood?: components["schemas"]["SelectModel"][];
            location?: components["schemas"]["LocationModel"];
            geometry?: string;
            customProperties?: components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
        };
        DatedDataModelListPlanStatus: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            id?: string;
            data?: (
                | "_4A_OPGENOMEN_IN_VISIE"
                | "_4B_NIET_OPGENOMEN_IN_VISIE"
                | "_3_IN_VOORBEREIDING"
                | "_2A_VASTGESTELD"
                | "_2B_VASTGESTELD_MET_UITWERKING_NODIG"
                | "_2C_VASTGESTELD_MET_BW_NODIG"
                | "_1A_ONHERROEPELIJK"
                | "_1B_ONHERROEPELIJK_MET_UITWERKING_NODIG"
                | "_1C_ONHERROEPELIJK_MET_BW_NODIG"
            )[];
        };
        DatedDataModelListPlanType: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            id?: string;
            data?: ("PAND_TRANSFORMATIE" | "TRANSFORMATIEGEBIED" | "HERSTRUCTURERING" | "VERDICHTING" | "UITBREIDING_UITLEG" | "UITBREIDING_OVERIG")[];
        };
        DatedDataModelProjectPhase: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            id?: string;
            /** @enum {string} */
            data?: "_1_CONCEPT" | "_2_INITIATIVE" | "_3_DEFINITION" | "_4_DESIGN" | "_5_PREPARATION" | "_6_REALIZATION" | "_7_AFTERCARE";
        };
        DatedDataModelString: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            id?: string;
            data?: string;
        };
        DatedPriorityModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            priorityModel?: components["schemas"]["PriorityModel"];
        };
        ProjectTimelineModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            projectId?: string;
            projectName?: components["schemas"]["DatedDataModelString"][];
            projectColor?: string;
            /** @enum {string} */
            confidentialityLevel?:
                | "PRIVATE"
                | "INTERNAL_CIVIL"
                | "INTERNAL_MANAGEMENT"
                | "INTERNAL_COUNCIL"
                | "EXTERNAL_REGIONAL"
                | "EXTERNAL_GOVERNMENTAL"
                | "PUBLIC";
            location?: components["schemas"]["LocationModel"];
            planType?: components["schemas"]["DatedDataModelListPlanType"][];
            priority?: components["schemas"]["DatedPriorityModel"][];
            projectPhase?: components["schemas"]["DatedDataModelProjectPhase"][];
            municipalityRole?: components["schemas"]["DatedDataModelString"][];
            planningPlanStatus?: components["schemas"]["DatedDataModelListPlanStatus"][];
            projectOwners?: components["schemas"]["UserGroupModel"][];
            /** Format: int64 */
            totalValue?: number;
            municipality?: string[];
            wijk?: string[];
            buurt?: string[];
        };
        ObjectNode: Record<string, never>;
        PlotModel: {
            brkGemeenteCode?: string;
            brkSectie?: string;
            /** Format: int64 */
            brkPerceelNummer?: number;
            subselectionGeometry?: components["schemas"]["ObjectNode"];
            plotFeature?: components["schemas"]["ObjectNode"];
        };
        FormDataContentDisposition: {
            type?: string;
            parameters?: {
                [key: string]: string;
            };
            fileName?: string;
            /** Format: date-time */
            creationDate?: string;
            /** Format: date-time */
            modificationDate?: string;
            /** Format: date-time */
            readDate?: string;
            /** Format: int64 */
            size?: number;
            name?: string;
        };
        OrdinalSelectDisabledModel: {
            /** Format: uuid */
            id?: string;
            name: string;
            disabled: boolean;
            /** Format: int32 */
            level: number;
        };
        PropertyModel: {
            /** Format: uuid */
            id?: string;
            name: string;
            /** @enum {string} */
            type: "FIXED" | "CUSTOM";
            /** @enum {string} */
            objectType: "PROJECT" | "WONINGBLOK";
            /** @enum {string} */
            propertyType: "BOOLEAN" | "CATEGORY" | "ORDINAL" | "NUMERIC" | "TEXT";
            disabled: boolean;
            categories?: components["schemas"]["SelectDisabledModel"][];
            ordinals?: components["schemas"]["OrdinalSelectDisabledModel"][];
        };
        SelectDisabledModel: {
            /** Format: uuid */
            id?: string;
            name: string;
            disabled: boolean;
        };
        UserModel: {
            /** Format: uuid */
            id: string;
            firstName: string;
            lastName: string;
            email: string;
            /** @enum {string} */
            role: "Admin" | "UserPlus" | "User" | "Management" | "Council" | "External";
            organization: string;
            phoneNumber: string;
            department: string;
            contactPerson: string;
            prefixes: string;
        };
        UserInfoModel: {
            /** Format: uuid */
            id: string;
            firstName: string;
            lastName: string;
            email: string;
            /** @enum {string} */
            role: "Admin" | "UserPlus" | "User" | "Management" | "Council" | "External";
            organization: string;
            phoneNumber: string;
            department: string;
            contactPerson: string;
            prefixes: string;
            initials: string;
            allowedActions?: (
                | "EDIT_USERS"
                | "EDIT_CUSTOM_PROPERTIES"
                | "CAN_OWN_PROJECTS"
                | "CHANGE_PROJECT_OWNER"
                | "VIEW_OTHERS_PROJECTS"
                | "CREATE_NEW_PROJECT"
                | "IMPORT_PROJECTS"
                | "EXPORT_PROJECTS"
            )[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
    callback: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    loggedIn: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    login: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    logout: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    getConfig: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ConfigModel"];
                };
            };
        };
    };
    createHouseblock: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["HouseblockSnapshotModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["HouseblockSnapshotModel"];
                };
            };
        };
    };
    deleteHouseblock: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    getCurrentHouseblockSnapshot: {
        parameters: {
            path: {
                uuid: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["HouseblockSnapshotModel"];
                };
            };
        };
    };
    getProjectCustomProperties: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
                };
            };
        };
    };
    updateProjectCustomProperty: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
                };
            };
        };
    };
    updateHouseblock: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["HouseblockSnapshotModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["HouseblockSnapshotModel"];
                };
            };
        };
    };
    getMilestone: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["MilestoneModel"];
                };
            };
        };
    };
    createProject: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ProjectCreateSnapshotModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectMinimalSnapshotModel"];
                };
            };
        };
    };
    getCurrentProjectSnapshot: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectSnapshotModel"];
                };
            };
        };
    };
    deleteProject: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    getAllProjects: {
        parameters: {
            query?: {
                pageNumber?: number;
                pageSize?: number;
                sortColumn?: string;
                sortDirection?: "ASC" | "DESC";
                filterColumn?: string;
                filterValue?: string[];
                filterCondition?: "CONTAINS" | "ANY_OF";
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectListModel"][];
                };
            };
        };
    };
    getAllProjectsListSize: {
        parameters: {
            query?: {
                pageNumber?: number;
                pageSize?: number;
                sortColumn?: string;
                sortDirection?: "ASC" | "DESC";
                filterColumn?: string;
                filterValue?: string[];
                filterCondition?: "CONTAINS" | "ANY_OF";
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": {
                        [key: string]: number;
                    };
                };
            };
        };
    };
    getCurrentProjectTimeline: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectTimelineModel"];
                };
            };
        };
    };
    getProjectCustomProperties_1: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
                };
            };
        };
    };
    updateProjectCustomProperty_1: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
                };
            };
        };
    };
    getProjectHouseblocks: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["HouseblockSnapshotModel"][];
                };
            };
        };
    };
    getProjectPlots: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PlotModel"][];
                };
            };
        };
    };
    setProjectPlots: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PlotModel"][];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    importFile: {
        parameters: {
            query?: {
                fileType?: "GEOJSON" | "EXCEL";
            };
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    uploadFile?: components["schemas"]["FormDataContentDisposition"];
                };
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    updateProjectSnapshot: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ProjectSnapshotModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectSnapshotModel"];
                };
            };
        };
    };
    getAllProperties: {
        parameters: {
            query?: {
                objectType?: "PROJECT" | "WONINGBLOK";
                disabled?: boolean;
                type?: "FIXED" | "CUSTOM";
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"][];
                };
            };
        };
    };
    createCustomProperty: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PropertyModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"];
                };
            };
        };
    };
    getProperty: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"];
                };
            };
        };
    };
    updateProperty: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PropertyModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"];
                };
            };
        };
    };
    disableCustomProperty: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"];
                };
            };
        };
    };
    getAllUserGroups: {
        parameters: {
            query?: {
                includeSingleUser?: boolean;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserGroupModel"][];
                };
            };
        };
    };
    createUserGroup: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["UserGroupModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserGroupModel"];
                };
            };
        };
    };
    updateUserGroup: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["UserGroupModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserGroupModel"];
                };
            };
        };
    };
    deleteUserGroup: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    getAllUsers: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserModel"][];
                };
            };
        };
    };
    createUser: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["UserModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserModel"];
                };
            };
        };
    };
    getUser: {
        parameters: {
            path: {
                userId: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserModel"];
                };
            };
        };
    };
    deleteUser: {
        parameters: {
            path: {
                userId: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    updateUser: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["UserModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserModel"];
                };
            };
        };
    };
    userInfo: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserInfoModel"];
                };
            };
        };
    };
}
