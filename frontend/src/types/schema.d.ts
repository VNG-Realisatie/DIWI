/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/rest/audit/project": {
        get: operations["getProjectAuditLog"];
    };
    "/rest/auth/callback": {
        get: operations["callback"];
    };
    "/rest/auth/loggedIn": {
        get: operations["loggedIn"];
    };
    "/rest/auth/login": {
        get: operations["login"];
    };
    "/rest/auth/logout": {
        get: operations["logout"];
    };
    "/rest/blueprints": {
        get: operations["getAllBlueprints"];
        post: operations["createBlueprint"];
    };
    "/rest/blueprints/{id}": {
        get: operations["getBlueprint"];
        put: operations["updateBlueprint"];
        delete: operations["deleteBlueprint"];
    };
    "/rest/config": {
        get: operations["getConfig"];
    };
    "/rest/dashboard/projects": {
        get: operations["getMultiProjectDashboardSnapshot"];
    };
    "/rest/dashboard/projects/policygoals": {
        get: operations["getMultiProjectPolicyGoals"];
    };
    "/rest/dashboard/blueprints": {
        get: operations["getOwnBlueprints"];
    };
    "/rest/dashboard/project/{id}": {
        get: operations["getProjectDashboardSnapshot"];
    };
    "/rest/dataexchange": {
        get: operations["getAllDataExchanges"];
        post: operations["createDataExchange"];
    };
    "/rest/dataexchange/{id}": {
        get: operations["getDataExchange"];
        put: operations["updateDataExchange"];
        delete: operations["deleteDataExchange"];
    };
    "/rest/dataexchange/{id}/download": {
        post: operations["downloadProjects"];
    };
    "/rest/dataexchange/{id}/export": {
        post: operations["exportProjects"];
    };
    "/rest/goals": {
        get: operations["getAllGoals"];
        post: operations["createGoal"];
    };
    "/rest/goals/categories": {
        get: operations["getAllGoalCategories"];
        post: operations["createGoalCategory"];
    };
    "/rest/goals/{id}": {
        get: operations["getGoalById"];
        put: operations["updateGoal"];
        delete: operations["deleteGoal"];
    };
    "/rest/goals/categories/{id}": {
        get: operations["getGoalCategory"];
        put: operations["updateGoalCategory"];
        delete: operations["deleteGoalCategory"];
    };
    "/rest/houseblock/add": {
        post: operations["createHouseblock"];
    };
    "/rest/houseblock/{id}": {
        delete: operations["deleteHouseblock"];
    };
    "/rest/houseblock/{uuid}": {
        get: operations["getCurrentHouseblockSnapshot"];
    };
    "/rest/houseblock/{id}/customproperties": {
        get: operations["getProjectCustomProperties"];
        put: operations["updateHouseblockCustomProperty"];
    };
    "/rest/houseblock/update": {
        put: operations["updateHouseblock"];
    };
    "/rest/milestone/{id}": {
        get: operations["getMilestone"];
    };
    "/rest/projects": {
        post: operations["createProject"];
    };
    "/rest/projects/{id}": {
        get: operations["getCurrentProjectSnapshot"];
        delete: operations["deleteProject"];
    };
    "/rest/projects/table": {
        get: operations["getAllProjects"];
    };
    "/rest/projects/table/size": {
        get: operations["getAllProjectsListSize"];
    };
    "/rest/projects/{id}/timeline": {
        get: operations["getCurrentProjectTimeline"];
    };
    "/rest/projects/{id}/customproperties": {
        get: operations["getProjectCustomProperties_1"];
        put: operations["updateProjectCustomProperty"];
    };
    "/rest/projects/{id}/houseblocks": {
        get: operations["getProjectHouseblocks"];
    };
    "/rest/projects/{id}/plots": {
        get: operations["getProjectPlots"];
        post: operations["setProjectPlots"];
    };
    "/rest/projects/import": {
        post: operations["importFile"];
    };
    "/rest/projects/update": {
        post: operations["updateProjectSnapshot"];
    };
    "/rest/properties": {
        get: operations["getAllProperties"];
        post: operations["createCustomProperty"];
    };
    "/rest/properties/{id}": {
        get: operations["getProperty"];
        put: operations["updateProperty"];
        delete: operations["disableCustomProperty"];
    };
    "/rest/groups": {
        get: operations["getAllUserGroups"];
        post: operations["createUserGroup"];
    };
    "/rest/groups/{id}": {
        put: operations["updateUserGroup"];
        delete: operations["deleteUserGroup"];
    };
    "/rest/users": {
        get: operations["getAllUsers"];
        post: operations["createUser"];
    };
    "/rest/users/{userId}": {
        get: operations["getUser"];
        delete: operations["deleteUser"];
    };
    "/rest/users/{id}": {
        put: operations["updateUser"];
    };
    "/rest/users/userinfo": {
        get: operations["userInfo"];
    };
}

export type webhooks = Record<string, never>;

export interface components {
    schemas: {
        ProjectAuditModel: {
            projectName?: string;
            /** Format: uuid */
            projectId?: string;
            /** @enum {string} */
            action?: "CREATE" | "UPDATE" | "DELETE";
            /** @enum {string} */
            property?: "project" | "projectName" | "projectConfidentiality" | "projectColor" | "projectStartDate" | "projectEndDate";
            oldValues?: string[];
            newValues?: string[];
            changeUser?: string;
            /** Format: date-time */
            changeDate?: string;
        };
        BlueprintModel: {
            /** Format: uuid */
            uuid?: string;
            name: string;
            userGroups?: components["schemas"]["UserGroupModel"][];
            elements?: (
                | "MUTATION"
                | "PROJECT_PHASE"
                | "TARGET_GROUP"
                | "PHYSICAL_APPEARANCE"
                | "OWNERSHIP_BUY"
                | "OWNERSHIP_RENT"
                | "PROJECT_MAP"
                | "RESIDENTIAL_PROJECTS"
                | "DELIVERABLES"
                | "DELAYED_PROJECTS"
            )[];
        };
        UserGroupModel: {
            /** Format: uuid */
            uuid: string;
            name: string;
            users?: components["schemas"]["UserGroupUserModel"][];
        };
        UserGroupUserModel: {
            /** Format: uuid */
            uuid?: string;
            firstName?: string;
            lastName?: string;
            initials?: string;
        };
        ConfigModel: {
            defaultMapBounds?: components["schemas"]["MapBounds"];
            municipalityName?: string;
            regionName?: string;
            provinceName?: string;
            /** @enum {string} */
            minimumExportConfidentiality?:
                | "PRIVATE"
                | "INTERNAL_CIVIL"
                | "INTERNAL_MANAGEMENT"
                | "INTERNAL_COUNCIL"
                | "EXTERNAL_REGIONAL"
                | "EXTERNAL_GOVERNMENTAL"
                | "PUBLIC";
        };
        LocationModel: {
            /** Format: double */
            lat: number;
            /** Format: double */
            lng: number;
        };
        MapBounds: {
            corner1?: components["schemas"]["LocationModel"];
            corner2?: components["schemas"]["LocationModel"];
        };
        MultiProjectDashboardModel: {
            physicalAppearance?: components["schemas"]["PieChartModel"][];
            targetGroup?: components["schemas"]["PieChartModel"][];
            priceCategoryRent?: components["schemas"]["RangeCategoryPieChartModel"][];
            priceCategoryOwn?: components["schemas"]["RangeCategoryPieChartModel"][];
            planning?: components["schemas"]["PlanningModel"][];
        };
        PieChartModel: {
            name?: string;
            /** Format: int32 */
            amount?: number;
        };
        PlanningModel: {
            /** Format: uuid */
            projectId?: string;
            name?: string;
            /** Format: int32 */
            amount?: number;
            /** Format: int32 */
            year?: number;
        };
        RangeCategoryPieChartModel: {
            name?: string;
            /** Format: int32 */
            amount?: number;
            /** Format: uuid */
            id?: string;
            min?: number;
            max?: number;
        };
        MultiProjectPolicyGoalSqlModel: {
            /** Format: uuid */
            id?: string;
            name?: string;
            category?: string;
            goal?: number;
            /** Format: int64 */
            amount?: number;
            /** Format: int64 */
            totalAmount?: number;
            percentage?: number;
            /** @enum {string} */
            goalDirection?: "MINIMAL" | "MAXIMAL";
            /** @enum {string} */
            goalType?: "NUMBER" | "PERCENTAGE";
        };
        ProjectDashboardModel: {
            physicalAppearance?: components["schemas"]["PieChartModel"][];
            priceCategoryRent?: components["schemas"]["RangeCategoryPieChartModel"][];
            priceCategoryOwn?: components["schemas"]["RangeCategoryPieChartModel"][];
            planning?: components["schemas"]["PlanningModel"][];
        };
        DataExchangeModel: {
            /** Format: uuid */
            id: string;
            name: string;
            /** @enum {string} */
            type: "ESRI_ZUID_HOLLAND";
            apiKey?: string;
            projectUrl?: string;
            projectDetailUrl?: string;
            valid?: boolean;
            properties?: components["schemas"]["DataExchangePropertyModel"][];
            validationErrors?: components["schemas"]["ValidationError"][];
        };
        DataExchangeOptionModel: {
            /** Format: uuid */
            id?: string;
            name?: string;
            propertyCategoryValueIds?: string[];
            propertyOrdinalValueIds?: string[];
        };
        DataExchangePropertyModel: {
            /** Format: uuid */
            id?: string;
            name?: string;
            /** Format: uuid */
            customPropertyId?: string;
            /** @enum {string} */
            objectType?: "PROJECT" | "WONINGBLOK";
            propertyTypes?: ("BOOLEAN" | "CATEGORY" | "ORDINAL" | "NUMERIC" | "TEXT" | "RANGE_CATEGORY")[];
            mandatory?: boolean;
            singleSelect?: boolean;
            options?: components["schemas"]["DataExchangeOptionModel"][];
        };
        ValidationError: {
            dxProperty?: string;
            diwiOption?: string;
            error?: string;
            errorCode?: string;
        };
        DataExchangeExportModel: {
            /** Format: date */
            exportDate?: string;
            projectIds?: string[];
            confidentialityLevels?: (
                | "PRIVATE"
                | "INTERNAL_CIVIL"
                | "INTERNAL_MANAGEMENT"
                | "INTERNAL_COUNCIL"
                | "EXTERNAL_REGIONAL"
                | "EXTERNAL_GOVERNMENTAL"
                | "PUBLIC"
            )[];
            confidentialityLevelsAsStrings?: string[];
        };
        GeographyOptionModel: {
            brkGemeenteCode?: string;
            brkSectie?: string;
            /** Format: int64 */
            brkPerceelNummer?: number;
        };
        PlanConditionModel: {
            /** Format: uuid */
            conditionId?: string;
            /** @enum {string} */
            conditionFieldType?: "PROPERTY" | "GROUND_POSITION" | "PROGRAMMING" | "HOUSE_TYPE" | "OWNERSHIP";
            /** Format: uuid */
            propertyId?: string;
            propertyName?: string;
            /** @enum {string} */
            propertyKind?: "FIXED" | "CUSTOM";
            /** @enum {string} */
            propertyType?: "BOOLEAN" | "CATEGORY" | "ORDINAL" | "NUMERIC" | "TEXT" | "RANGE_CATEGORY";
            booleanValue?: boolean;
            categoryOptions?: components["schemas"]["SelectModel"][];
            ordinalOptions?: components["schemas"]["SingleValueOrRangeModelSelectModel"];
            listOptions?: string[];
            ownershipOptions?: components["schemas"]["PlanOwnershipModel"][];
        };
        PlanGeographyModel: {
            /** Format: uuid */
            conditionId?: string;
            options?: components["schemas"]["GeographyOptionModel"][];
        };
        PlanModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            id?: string;
            name: string;
            /** @enum {string} */
            goalType: "NUMBER" | "PERCENTAGE";
            /** @enum {string} */
            goalDirection: "MINIMAL" | "MAXIMAL";
            goalValue: number;
            category?: components["schemas"]["SelectModel"];
            conditions?: components["schemas"]["PlanConditionModel"][];
            geography?: components["schemas"]["PlanGeographyModel"];
        };
        PlanOwnershipModel: {
            /** @enum {string} */
            type?: "KOOPWONING" | "HUURWONING_PARTICULIERE_VERHUURDER" | "HUURWONING_WONINGCORPORATIE";
            value?: components["schemas"]["SingleValueOrRangeModelLong"];
            rangeCategoryOption?: components["schemas"]["SelectModel"];
        };
        SelectModel: {
            /** Format: uuid */
            id: string;
            name: string;
        };
        SingleValueOrRangeModelLong: {
            /** Format: int64 */
            value?: number;
            /** Format: int64 */
            min?: number;
            /** Format: int64 */
            max?: number;
        };
        SingleValueOrRangeModelSelectModel: {
            value?: components["schemas"]["SelectModel"];
            min?: components["schemas"]["SelectModel"];
            max?: components["schemas"]["SelectModel"];
        };
        AmountModel: {
            /** Format: uuid */
            id: string;
            /** Format: int32 */
            amount: number;
        };
        GroundPosition: {
            /** Format: int32 */
            noPermissionOwner?: number;
            /** Format: int32 */
            intentionPermissionOwner?: number;
            /** Format: int32 */
            formalPermissionOwner?: number;
        };
        HouseType: {
            /** Format: int32 */
            meergezinswoning?: number;
            /** Format: int32 */
            eengezinswoning?: number;
        };
        HouseblockSnapshotModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            projectId?: string;
            /** Format: uuid */
            houseblockId?: string;
            houseblockName?: string;
            size?: components["schemas"]["SingleValueOrRangeModelBigDecimal"];
            programming?: boolean;
            mutation?: components["schemas"]["Mutation"];
            ownershipValue?: components["schemas"]["OwnershipValue"][];
            groundPosition?: components["schemas"]["GroundPosition"];
            physicalAppearance?: components["schemas"]["AmountModel"][];
            houseType?: components["schemas"]["HouseType"];
            targetGroup?: components["schemas"]["AmountModel"][];
            customProperties?: components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
        };
        Mutation: {
            /** @enum {string} */
            kind?: "CONSTRUCTION" | "DEMOLITION";
            /** Format: int32 */
            amount?: number;
        };
        OwnershipValue: {
            /** Format: uuid */
            id?: string;
            /** @enum {string} */
            type?: "KOOPWONING" | "HUURWONING_PARTICULIERE_VERHUURDER" | "HUURWONING_WONINGCORPORATIE";
            /** Format: int32 */
            amount?: number;
            value?: components["schemas"]["SingleValueOrRangeModelLong"];
            /** Format: uuid */
            valueCategoryId?: string;
            rentalValue?: components["schemas"]["SingleValueOrRangeModelLong"];
            /** Format: uuid */
            rentalValueCategoryId?: string;
        };
        ProjectHouseblockCustomPropertyModel: {
            /** Format: uuid */
            customPropertyId?: string;
            /** @enum {string} */
            propertyType?: "BOOLEAN" | "CATEGORY" | "ORDINAL" | "NUMERIC" | "TEXT" | "RANGE_CATEGORY";
            textValue?: string;
            booleanValue?: boolean;
            numericValue?: components["schemas"]["SingleValueOrRangeModelBigDecimal"];
            categories?: string[];
            ordinals?: components["schemas"]["SingleValueOrRangeModelUUID"];
        };
        SingleValueOrRangeModelBigDecimal: {
            value?: number;
            min?: number;
            max?: number;
        };
        SingleValueOrRangeModelUUID: {
            /** Format: uuid */
            value?: string;
            /** Format: uuid */
            min?: string;
            /** Format: uuid */
            max?: string;
        };
        MilestoneModel: {
            /** Format: uuid */
            id: string;
            /** Format: uuid */
            stateId: string;
            /** @enum {string} */
            status: "VOORSPELD" | "GEPLAND" | "GEREALISEERD" | "AFGEBROKEN";
            /** Format: date */
            date?: string;
            description?: string;
        };
        ProjectMinimalSnapshotModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            projectName: string;
            projectColor: string;
            /** @enum {string} */
            confidentialityLevel:
                | "PRIVATE"
                | "INTERNAL_CIVIL"
                | "INTERNAL_MANAGEMENT"
                | "INTERNAL_COUNCIL"
                | "EXTERNAL_REGIONAL"
                | "EXTERNAL_GOVERNMENTAL"
                | "PUBLIC";
            /** @enum {string} */
            projectPhase: "_1_CONCEPT" | "_2_INITIATIVE" | "_3_DEFINITION" | "_4_DESIGN" | "_5_PREPARATION" | "_6_REALIZATION" | "_7_AFTERCARE";
            projectOwners: components["schemas"]["UserGroupModel"][];
            /** Format: uuid */
            projectId: string;
        };
        ProjectCreateSnapshotModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            projectName: string;
            projectColor: string;
            /** @enum {string} */
            confidentialityLevel:
                | "PRIVATE"
                | "INTERNAL_CIVIL"
                | "INTERNAL_MANAGEMENT"
                | "INTERNAL_COUNCIL"
                | "EXTERNAL_REGIONAL"
                | "EXTERNAL_GOVERNMENTAL"
                | "PUBLIC";
            /** @enum {string} */
            projectPhase: "_1_CONCEPT" | "_2_INITIATIVE" | "_3_DEFINITION" | "_4_DESIGN" | "_5_PREPARATION" | "_6_REALIZATION" | "_7_AFTERCARE";
            projectOwners: components["schemas"]["UserGroupModel"][];
        };
        PriorityModel: {
            value?: components["schemas"]["SelectModel"];
            min?: components["schemas"]["SelectModel"];
            max?: components["schemas"]["SelectModel"];
        };
        ProjectListModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            projectName: string;
            projectColor: string;
            /** @enum {string} */
            confidentialityLevel:
                | "PRIVATE"
                | "INTERNAL_CIVIL"
                | "INTERNAL_MANAGEMENT"
                | "INTERNAL_COUNCIL"
                | "EXTERNAL_REGIONAL"
                | "EXTERNAL_GOVERNMENTAL"
                | "PUBLIC";
            /** @enum {string} */
            projectPhase: "_1_CONCEPT" | "_2_INITIATIVE" | "_3_DEFINITION" | "_4_DESIGN" | "_5_PREPARATION" | "_6_REALIZATION" | "_7_AFTERCARE";
            projectOwners: components["schemas"]["UserGroupModel"][];
            /** Format: uuid */
            projectId: string;
            /** Format: uuid */
            projectStateId?: string;
            planningPlanStatus?: (
                | "_4A_OPGENOMEN_IN_VISIE"
                | "_4B_NIET_OPGENOMEN_IN_VISIE"
                | "_3_IN_VOORBEREIDING"
                | "_2A_VASTGESTELD"
                | "_2B_VASTGESTELD_MET_UITWERKING_NODIG"
                | "_2C_VASTGESTELD_MET_BW_NODIG"
                | "_1A_ONHERROEPELIJK"
                | "_1B_ONHERROEPELIJK_MET_UITWERKING_NODIG"
                | "_1C_ONHERROEPELIJK_MET_BW_NODIG"
            )[];
            planType?: ("PAND_TRANSFORMATIE" | "TRANSFORMATIEGEBIED" | "HERSTRUCTURERING" | "VERDICHTING" | "UITBREIDING_UITLEG" | "UITBREIDING_OVERIG")[];
            priority?: components["schemas"]["PriorityModel"];
            municipalityRole?: components["schemas"]["SelectModel"][];
            /** Format: int64 */
            totalValue?: number;
            municipality?: components["schemas"]["SelectModel"][];
            district?: components["schemas"]["SelectModel"][];
            neighbourhood?: components["schemas"]["SelectModel"][];
            location?: components["schemas"]["LocationModel"];
            geometry?: string;
        };
        ProjectSnapshotModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            projectName: string;
            projectColor: string;
            /** @enum {string} */
            confidentialityLevel:
                | "PRIVATE"
                | "INTERNAL_CIVIL"
                | "INTERNAL_MANAGEMENT"
                | "INTERNAL_COUNCIL"
                | "EXTERNAL_REGIONAL"
                | "EXTERNAL_GOVERNMENTAL"
                | "PUBLIC";
            /** @enum {string} */
            projectPhase: "_1_CONCEPT" | "_2_INITIATIVE" | "_3_DEFINITION" | "_4_DESIGN" | "_5_PREPARATION" | "_6_REALIZATION" | "_7_AFTERCARE";
            projectOwners: components["schemas"]["UserGroupModel"][];
            /** Format: uuid */
            projectId: string;
            /** Format: uuid */
            projectStateId?: string;
            planningPlanStatus?: (
                | "_4A_OPGENOMEN_IN_VISIE"
                | "_4B_NIET_OPGENOMEN_IN_VISIE"
                | "_3_IN_VOORBEREIDING"
                | "_2A_VASTGESTELD"
                | "_2B_VASTGESTELD_MET_UITWERKING_NODIG"
                | "_2C_VASTGESTELD_MET_BW_NODIG"
                | "_1A_ONHERROEPELIJK"
                | "_1B_ONHERROEPELIJK_MET_UITWERKING_NODIG"
                | "_1C_ONHERROEPELIJK_MET_BW_NODIG"
            )[];
            planType?: ("PAND_TRANSFORMATIE" | "TRANSFORMATIEGEBIED" | "HERSTRUCTURERING" | "VERDICHTING" | "UITBREIDING_UITLEG" | "UITBREIDING_OVERIG")[];
            priority?: components["schemas"]["PriorityModel"];
            municipalityRole?: components["schemas"]["SelectModel"][];
            /** Format: int64 */
            totalValue?: number;
            municipality?: components["schemas"]["SelectModel"][];
            district?: components["schemas"]["SelectModel"][];
            neighbourhood?: components["schemas"]["SelectModel"][];
            location?: components["schemas"]["LocationModel"];
            geometry?: string;
            customProperties?: components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
        };
        DatedDataModelListPlanStatus: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            id?: string;
            data?: (
                | "_4A_OPGENOMEN_IN_VISIE"
                | "_4B_NIET_OPGENOMEN_IN_VISIE"
                | "_3_IN_VOORBEREIDING"
                | "_2A_VASTGESTELD"
                | "_2B_VASTGESTELD_MET_UITWERKING_NODIG"
                | "_2C_VASTGESTELD_MET_BW_NODIG"
                | "_1A_ONHERROEPELIJK"
                | "_1B_ONHERROEPELIJK_MET_UITWERKING_NODIG"
                | "_1C_ONHERROEPELIJK_MET_BW_NODIG"
            )[];
        };
        DatedDataModelListPlanType: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            id?: string;
            data?: ("PAND_TRANSFORMATIE" | "TRANSFORMATIEGEBIED" | "HERSTRUCTURERING" | "VERDICHTING" | "UITBREIDING_UITLEG" | "UITBREIDING_OVERIG")[];
        };
        DatedDataModelProjectPhase: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            id?: string;
            /** @enum {string} */
            data?: "_1_CONCEPT" | "_2_INITIATIVE" | "_3_DEFINITION" | "_4_DESIGN" | "_5_PREPARATION" | "_6_REALIZATION" | "_7_AFTERCARE";
        };
        DatedDataModelString: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            id?: string;
            data?: string;
        };
        DatedPriorityModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            priorityModel?: components["schemas"]["PriorityModel"];
        };
        ProjectTimelineModel: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** Format: uuid */
            projectId?: string;
            projectName?: components["schemas"]["DatedDataModelString"][];
            projectColor?: string;
            /** @enum {string} */
            confidentialityLevel?:
                | "PRIVATE"
                | "INTERNAL_CIVIL"
                | "INTERNAL_MANAGEMENT"
                | "INTERNAL_COUNCIL"
                | "EXTERNAL_REGIONAL"
                | "EXTERNAL_GOVERNMENTAL"
                | "PUBLIC";
            location?: components["schemas"]["LocationModel"];
            planType?: components["schemas"]["DatedDataModelListPlanType"][];
            priority?: components["schemas"]["DatedPriorityModel"][];
            projectPhase?: components["schemas"]["DatedDataModelProjectPhase"][];
            municipalityRole?: components["schemas"]["DatedDataModelString"][];
            planningPlanStatus?: components["schemas"]["DatedDataModelListPlanStatus"][];
            projectOwners?: components["schemas"]["UserGroupModel"][];
            /** Format: int64 */
            totalValue?: number;
            municipality?: string[];
            wijk?: string[];
            buurt?: string[];
        };
        ObjectNode: Record<string, never>;
        PlotModel: {
            brkGemeenteCode?: string;
            brkSectie?: string;
            /** Format: int64 */
            brkPerceelNummer?: number;
            subselectionGeometry?: components["schemas"]["ObjectNode"];
            plotFeature?: components["schemas"]["ObjectNode"];
        };
        ImportError: {
            errorCode?: string;
            /** Format: int32 */
            row?: number;
            /** Format: int32 */
            identificationNumber?: number;
            houseblockName?: string;
            column?: string;
            propertyName?: string;
            value?: string;
            errorMessage?: string;
            /** Format: uuid */
            customPropertyId?: string;
        };
        ImportResponse: {
            result?: components["schemas"]["SelectModel"][];
            error?: components["schemas"]["ImportError"][];
        };
        FormDataContentDisposition: {
            type?: string;
            parameters?: {
                [key: string]: string;
            };
            fileName?: string;
            /** Format: date-time */
            creationDate?: string;
            /** Format: date-time */
            modificationDate?: string;
            /** Format: date-time */
            readDate?: string;
            /** Format: int64 */
            size?: number;
            name?: string;
        };
        OrdinalSelectDisabledModel: {
            /** Format: uuid */
            id?: string;
            name: string;
            disabled: boolean;
            /** Format: int32 */
            level: number;
            ordinalValue?: string;
        };
        PropertyModel: {
            /** Format: uuid */
            id?: string;
            name: string;
            /** @enum {string} */
            type: "FIXED" | "CUSTOM";
            /** @enum {string} */
            objectType: "PROJECT" | "WONINGBLOK";
            /** @enum {string} */
            propertyType: "BOOLEAN" | "CATEGORY" | "ORDINAL" | "NUMERIC" | "TEXT" | "RANGE_CATEGORY";
            disabled: boolean;
            mandatory: boolean;
            singleSelect?: boolean;
            categories?: components["schemas"]["SelectDisabledModel"][];
            ordinals?: components["schemas"]["OrdinalSelectDisabledModel"][];
            ranges?: components["schemas"]["RangeSelectDisabledModel"][];
        };
        RangeSelectDisabledModel: {
            /** Format: uuid */
            id: string;
            name: string;
            min: number;
            max?: number;
            disabled: boolean;
        };
        SelectDisabledModel: {
            /** Format: uuid */
            id?: string;
            name: string;
            disabled: boolean;
        };
        UserModel: {
            /** Format: uuid */
            id: string;
            firstName: string;
            lastName: string;
            email: string;
            /** @enum {string} */
            role: "Admin" | "UserPlus" | "User" | "Management" | "Council" | "External";
            organization: string;
            phoneNumber: string;
            department: string;
            contactPerson: string;
            prefixes: string;
        };
        UserInfoModel: {
            /** Format: uuid */
            id: string;
            firstName: string;
            lastName: string;
            email: string;
            /** @enum {string} */
            role: "Admin" | "UserPlus" | "User" | "Management" | "Council" | "External";
            organization: string;
            phoneNumber: string;
            department: string;
            contactPerson: string;
            prefixes: string;
            initials: string;
            allowedActions?: (
                | "VIEW_API"
                | "VIEW_USERS"
                | "EDIT_USERS"
                | "VIEW_GROUPS"
                | "EDIT_GROUPS"
                | "VIEW_CONFIG"
                | "EDIT_CONFIG"
                | "VIEW_CUSTOM_PROPERTIES"
                | "EDIT_CUSTOM_PROPERTIES"
                | "CAN_OWN_PROJECTS"
                | "CHANGE_PROJECT_OWNER"
                | "VIEW_OTHERS_PROJECTS"
                | "VIEW_OWN_PROJECTS"
                | "EDIT_OWN_PROJECTS"
                | "EDIT_ALL_PROJECTS"
                | "CREATE_NEW_PROJECT"
                | "IMPORT_PROJECTS"
                | "EXPORT_PROJECTS"
                | "VIEW_DASHBOARDS"
                | "VIEW_ALL_BLUEPRINTS"
                | "EDIT_ALL_BLUEPRINTS"
                | "VIEW_OWN_BLUEPRINTS"
                | "VIEW_GOALS"
                | "EDIT_GOALS"
                | "VIEW_DATA_EXCHANGES"
                | "EDIT_DATA_EXCHANGES"
            )[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
    getProjectAuditLog: {
        parameters: {
            query?: {
                projectId?: string;
                startTime?: string;
                endTime?: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectAuditModel"][];
                };
            };
        };
    };
    callback: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    loggedIn: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    login: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    logout: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    getAllBlueprints: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["BlueprintModel"][];
                };
            };
        };
    };
    createBlueprint: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["BlueprintModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["BlueprintModel"];
                };
            };
        };
    };
    getBlueprint: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["BlueprintModel"];
                };
            };
        };
    };
    updateBlueprint: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["BlueprintModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["BlueprintModel"];
                };
            };
        };
    };
    deleteBlueprint: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    getConfig: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ConfigModel"];
                };
            };
        };
    };
    getMultiProjectDashboardSnapshot: {
        parameters: {
            query?: {
                snapshotDate?: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["MultiProjectDashboardModel"];
                };
            };
        };
    };
    getMultiProjectPolicyGoals: {
        parameters: {
            query?: {
                snapshotDate?: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["MultiProjectPolicyGoalSqlModel"][];
                };
            };
        };
    };
    getOwnBlueprints: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["BlueprintModel"][];
                };
            };
        };
    };
    getProjectDashboardSnapshot: {
        parameters: {
            query?: {
                snapshotDate?: string;
            };
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectDashboardModel"];
                };
            };
        };
    };
    getAllDataExchanges: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["DataExchangeModel"][];
                };
            };
        };
    };
    createDataExchange: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["DataExchangeModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["DataExchangeModel"];
                };
            };
        };
    };
    getDataExchange: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["DataExchangeModel"];
                };
            };
        };
    };
    updateDataExchange: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["DataExchangeModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["DataExchangeModel"];
                };
            };
        };
    };
    deleteDataExchange: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    downloadProjects: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["DataExchangeExportModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/octet-stream": unknown;
                };
            };
        };
    };
    exportProjects: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["DataExchangeExportModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    getAllGoals: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PlanModel"][];
                };
            };
        };
    };
    createGoal: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PlanModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PlanModel"];
                };
            };
        };
    };
    getAllGoalCategories: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["SelectModel"][];
                };
            };
        };
    };
    createGoalCategory: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["SelectModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["SelectModel"];
                };
            };
        };
    };
    getGoalById: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PlanModel"];
                };
            };
        };
    };
    updateGoal: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PlanModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PlanModel"];
                };
            };
        };
    };
    deleteGoal: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    getGoalCategory: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["SelectModel"];
                };
            };
        };
    };
    updateGoalCategory: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["SelectModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["SelectModel"];
                };
            };
        };
    };
    deleteGoalCategory: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    createHouseblock: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["HouseblockSnapshotModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["HouseblockSnapshotModel"];
                };
            };
        };
    };
    deleteHouseblock: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    getCurrentHouseblockSnapshot: {
        parameters: {
            path: {
                uuid: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["HouseblockSnapshotModel"];
                };
            };
        };
    };
    getProjectCustomProperties: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
                };
            };
        };
    };
    updateHouseblockCustomProperty: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
                };
            };
        };
    };
    updateHouseblock: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["HouseblockSnapshotModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["HouseblockSnapshotModel"];
                };
            };
        };
    };
    getMilestone: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["MilestoneModel"];
                };
            };
        };
    };
    createProject: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ProjectCreateSnapshotModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectMinimalSnapshotModel"];
                };
            };
        };
    };
    getCurrentProjectSnapshot: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectSnapshotModel"];
                };
            };
        };
    };
    deleteProject: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    getAllProjects: {
        parameters: {
            query?: {
                pageNumber?: number;
                pageSize?: number;
                sortColumn?: string;
                sortDirection?: "ASC" | "DESC";
                filterColumn?: string;
                filterValue?: string[];
                filterCondition?: "CONTAINS" | "ANY_OF";
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectListModel"][];
                };
            };
        };
    };
    getAllProjectsListSize: {
        parameters: {
            query?: {
                pageNumber?: number;
                pageSize?: number;
                sortColumn?: string;
                sortDirection?: "ASC" | "DESC";
                filterColumn?: string;
                filterValue?: string[];
                filterCondition?: "CONTAINS" | "ANY_OF";
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": {
                        [key: string]: number;
                    };
                };
            };
        };
    };
    getCurrentProjectTimeline: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectTimelineModel"];
                };
            };
        };
    };
    getProjectCustomProperties_1: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
                };
            };
        };
    };
    updateProjectCustomProperty: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectHouseblockCustomPropertyModel"][];
                };
            };
        };
    };
    getProjectHouseblocks: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["HouseblockSnapshotModel"][];
                };
            };
        };
    };
    getProjectPlots: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PlotModel"][];
                };
            };
        };
    };
    setProjectPlots: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PlotModel"][];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    importFile: {
        parameters: {
            query?: {
                fileType?: "GEOJSON" | "EXCEL";
            };
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    uploadFile?: components["schemas"]["FormDataContentDisposition"];
                };
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ImportResponse"];
                };
            };
        };
    };
    updateProjectSnapshot: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ProjectSnapshotModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["ProjectSnapshotModel"];
                };
            };
        };
    };
    getAllProperties: {
        parameters: {
            query?: {
                objectType?: "PROJECT" | "WONINGBLOK";
                disabled?: boolean;
                type?: "FIXED" | "CUSTOM";
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"][];
                };
            };
        };
    };
    createCustomProperty: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PropertyModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"];
                };
            };
        };
    };
    getProperty: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"];
                };
            };
        };
    };
    updateProperty: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PropertyModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"];
                };
            };
        };
    };
    disableCustomProperty: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["PropertyModel"];
                };
            };
        };
    };
    getAllUserGroups: {
        parameters: {
            query?: {
                includeSingleUser?: boolean;
                projectOwners?: boolean;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserGroupModel"][];
                };
            };
        };
    };
    createUserGroup: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["UserGroupModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserGroupModel"];
                };
            };
        };
    };
    updateUserGroup: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["UserGroupModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserGroupModel"];
                };
            };
        };
    };
    deleteUserGroup: {
        parameters: {
            path: {
                id: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "*/*": unknown;
                };
            };
        };
    };
    getAllUsers: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserModel"][];
                };
            };
        };
    };
    createUser: {
        requestBody?: {
            content: {
                "application/json": components["schemas"]["UserModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserModel"];
                };
            };
        };
    };
    getUser: {
        parameters: {
            path: {
                userId: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserModel"];
                };
            };
        };
    };
    deleteUser: {
        parameters: {
            path: {
                userId: string;
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    updateUser: {
        parameters: {
            path: {
                id: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["UserModel"];
            };
        };
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserModel"];
                };
            };
        };
    };
    userInfo: {
        responses: {
            /** @description default response */
            default: {
                content: {
                    "application/json": components["schemas"]["UserInfoModel"];
                };
            };
        };
    };
}
