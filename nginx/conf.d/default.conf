server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # autodiscover latest API version via redirect.
    location /api {
        # Always use a temporary redirect here, as the destination can be changed when the API version is changed.
        return 302 /api/v0.0;
    }

    # API version 0.0 is file-based hardcoded dummy data to aid in development of the frontend.
    location ~ /api/v0.0 {
        # note that temporary redirects are used to aid in development
        rewrite ^/(.*)/$ /$1 redirect; # remove trailing slashes
        rewrite ^/(.*).json$ /$1 redirect; # remove .json from URI locators
        rewrite ^/(.*)/index$ /$1 redirect; # remove index from URI locators (directory index handling)
        add_header Content-Type application/json;
        root   /var/www/;
        try_files $uri $uri.json $uri/index.json =404;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
